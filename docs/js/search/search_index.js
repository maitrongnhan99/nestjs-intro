var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.196,1,1.973]],["body/controllers/AppController.html",[0,1.729,1,2.853,2,1.199,3,0.492,4,0.435,5,0.435,6,2.838,7,0.552,8,1.896,9,4.439,10,4.439,11,4.439,12,1.933,13,0.036,14,4.505,15,1.342,16,3.422,17,2.12,18,1.669,19,3.422,20,4.505,21,3.422,22,0.813,23,0.912,24,2.167,25,1.313,26,2.571,27,2.838,28,3.422,29,0.492,30,0.142,31,2.838,32,1.938,33,2.12,34,3.422,35,3.422,36,3.422,37,0.025,38,0.025]],["title/modules/AppModule.html",[39,1.092,40,1.973]],["body/modules/AppModule.html",[1,3.136,2,1.544,3,0.476,4,0.42,5,0.42,13,0.035,22,0.913,23,0.882,26,2.887,27,2.744,29,0.476,30,0.137,37,0.025,38,0.025,39,1.735,40,3.855,41,1.392,42,1.392,43,1.873,44,1.873,45,1.531,46,2.804,47,1.873,48,2.744,49,2.744,50,2.744,51,2.887,52,3.202,53,2.617,54,2.494,55,1.873,56,1.873,57,3.308,58,2.789,59,2.744,60,3.308,61,2.372,62,3.308]],["title/injectables/AppService.html",[26,1.59,63,1.196]],["body/injectables/AppService.html",[3,0.527,4,0.466,5,0.466,7,0.591,8,1.982,9,4.556,10,4.556,11,4.556,13,0.035,15,1.387,17,2.191,18,1.7,22,0.591,23,0.976,26,2.404,29,0.527,30,0.152,33,2.191,37,0.026,38,0.026,63,1.807,64,2.074,65,3.038,66,3.662,67,3.662,68,3.662,69,3.662,70,3.662,71,3.038,72,2.319,73,3.377,74,3.906,75,3.662,76,3.662]],["title/controllers/AuthController.html",[0,1.196,77,1.973]],["body/controllers/AuthController.html",[0,1.253,2,1.144,3,0.469,4,0.415,5,0.415,7,0.527,8,1.838,12,1.253,13,0.036,15,0.87,17,1.374,18,1.276,22,0.848,23,0.87,24,2.067,25,1.253,29,0.469,30,0.135,32,2.472,33,1.374,37,0.024,38,0.024,77,2.765,78,2.707,79,2.341,80,3.264,81,3.621,82,3.264,83,4.366,84,1.194,85,4.366,86,3.264,87,1.666,88,1.374,89,1.253,90,3.528,91,2.067,92,2.341,93,1.51,94,2.707,95,2.211,96,2.707,97,2.276,98,2.707,99,3.264,100,3.264,101,2.067,102,2.707,103,3.131,104,3.264,105,1.666,106,1.666,107,2.067,108,1.397,109,3.264,110,2.341,111,1.666,112,3.264,113,3.264,114,3.264,115,3.264]],["title/modules/AuthModule.html",[39,1.092,51,1.59]],["body/modules/AuthModule.html",[2,1.619,3,0.512,4,0.452,5,0.452,13,0.035,22,0.877,23,0.948,29,0.512,30,0.147,37,0.026,38,0.026,39,1.798,41,1.497,42,1.497,43,2.014,44,2.014,45,1.646,46,2.906,47,2.906,51,2.999,53,2.138,54,2.617,55,2.014,56,2.014,58,2.253,61,2.551,77,3.25,91,2.926,97,2.847,98,2.951,116,2.951,117,2.951,118,2.951,119,3.557,120,3.557]],["title/injectables/AuthService.html",[63,1.196,97,1.442]],["body/injectables/AuthService.html",[3,0.525,4,0.464,5,0.464,7,0.589,8,1.977,13,0.035,15,1.252,17,1.977,18,1.75,22,0.589,23,0.973,29,0.525,30,0.151,33,1.977,37,0.026,38,0.026,63,1.803,64,2.066,81,3.896,84,0.886,87,1.863,88,1.536,89,1.401,97,2.174,105,2.398,106,2.8,121,3.027,122,3.29,123,4.55,124,3.649,125,3.649,126,4.697,127,3.649,128,3.649,129,3.027]],["title/classes/CreatePostDto.html",[30,0.129,130,1.59]],["body/classes/CreatePostDto.html",[3,0.195,4,0.172,5,0.172,7,0.218,12,1.824,13,0.035,15,1.267,18,1.509,22,0.6,25,0.519,29,0.195,30,0.119,37,0.013,38,0.013,72,2.121,84,1.34,89,1.705,93,2.738,129,2.779,130,1.146,131,0.626,132,3.497,133,1.123,134,1.212,135,3.521,136,2.878,137,2.878,138,3.823,139,2.878,140,4.244,141,4.609,142,3.044,143,3.715,144,3.521,145,3.044,146,3.174,147,3.186,148,2.878,149,1.353,150,1.863,151,2.246,152,2.246,153,2.246,154,2.246,155,1.353,156,2.121,157,1.353,158,2.246,159,2.138,160,2.664,161,2.246,162,2.246,163,2.246,164,1.353,165,1.353,166,1.353,167,3.35,168,3.35,169,1.353,170,3.942,171,2.779,172,2.779,173,1.422,174,1.863,175,1.863,176,1.353,177,3.35,178,2.246,179,2.246,180,2.878,181,1.353,182,1.353,183,1.353,184,2.246,185,1.422,186,2.779,187,1.353,188,2.246,189,1.422,190,1.863,191,1.863,192,2.246,193,2.246,194,2.246,195,2.246,196,2.246,197,1.353,198,3.323,199,2.779,200,1.353,201,1.863,202,1.863,203,1.353,204,1.353,205,1.353,206,1.353,207,3.35,208,1.353,209,1.272,210,2.387,211,1.353,212,3.305,213,2.387,214,0.971,215,2.878,216,2.246,217,1.353,218,2.688,219,2.664,220,2.688,221,1.123,222,1.123,223,2.246,224,0.691,225,0.971,226,0.691,227,0.857,228,1.353,229,2.246,230,1.353,231,1.353,232,1.353,233,1.123,234,2.402,235,1.353,236,1.353,237,1.123,238,2.387,239,2.246,240,1.823,241,2.246,242,1.353,243,2.246]],["title/classes/CreatePostsMetaOptionsDto.html",[30,0.129,156,1.973]],["body/classes/CreatePostsMetaOptionsDto.html",[3,0.551,4,0.487,5,0.487,7,0.618,12,1.86,13,0.034,15,1.292,18,1.632,22,0.618,29,0.551,30,0.201,37,0.027,38,0.027,84,1.176,131,1.774,132,3.812,134,2.04,156,3.069,160,3.812,218,3.537,220,3.069,224,1.957,227,3.366,238,4.409,240,3.366,244,3.179,245,3.833,246,3.833,247,3.833]],["title/classes/CreateUserDto.html",[30,0.129,248,1.764]],["body/classes/CreateUserDto.html",[3,0.283,4,0.25,5,0.25,7,0.317,12,1.593,13,0.035,15,1.106,18,1.489,22,0.489,25,0.755,29,0.283,30,0.125,37,0.017,38,0.017,72,2.999,84,1.007,88,2.32,89,1.163,105,2.289,106,2.772,108,1.63,131,0.91,134,1.275,145,2.977,146,2.884,147,2.173,159,1.747,170,4.681,171,4.225,186,4.571,190,2.513,191,2.513,209,2.884,210,4.334,212,3.215,218,2.629,219,2.173,220,2.629,221,2.513,222,4.092,224,1.004,234,1.41,237,2.513,248,1.715,249,3.718,250,1.41,251,2.34,252,2.34,253,1.967,254,1.967,255,2.173,256,4.933,257,1.967,258,3.029,259,4.735,260,5.336,261,1.967,262,4.735,263,2.173,264,1.967,265,1.967,266,3.029,267,2.629,268,1.967,269,1.967,270,3.029,271,3.029,272,3.029,273,3.029,274,4.151,275,3.029,276,1.715,277,3.029,278,1.967,279,1.967,280,3.029,281,3.695,282,1.41,283,1.967,284,1.967]],["title/classes/GetUserParamDto.html",[30,0.129,285,1.764]],["body/classes/GetUserParamDto.html",[3,0.529,4,0.467,5,0.467,7,0.593,12,1.411,13,0.035,15,0.98,22,0.841,25,1.411,29,0.529,30,0.216,37,0.026,38,0.026,84,1.381,108,1.761,131,1.701,134,1.987,146,2.673,150,3.049,159,1.548,213,3.915,214,2.636,219,3.385,224,1.877,276,3.221,285,2.673,286,3.915,287,3.049,288,2.904,289,3.676,290,3.676,291,4.72,292,1.701]],["title/controllers/PostsController.html",[0,1.196,293,1.973]],["body/controllers/PostsController.html",[0,0.834,2,0.762,3,0.313,4,0.276,5,0.276,7,0.351,8,1.376,12,1.508,13,0.035,15,1.047,17,1.654,18,1.439,22,0.756,23,0.579,24,1.377,25,0.834,29,0.313,30,0.09,32,1.231,33,1.376,37,0.018,38,0.018,79,1.559,84,1.305,87,2.006,88,1.654,89,1.508,90,2.345,92,1.559,93,2.663,101,1.377,103,1.559,108,1.399,111,2.231,122,3.045,130,2.745,142,2.345,159,2.213,226,2.231,227,1.377,293,2.488,294,1.803,295,3.27,296,3.27,297,3.93,298,2.174,299,2.174,300,4.371,301,4.371,302,3.27,303,2.174,304,3.27,305,3.625,306,3.27,307,2.174,308,2.174,309,3.27,310,2.174,311,2.712,312,2.174,313,3.523,314,2.174,315,4.371,316,2.174,317,2.712,318,3.27,319,2.174,320,3.27,321,2.174,322,1.803,323,1.803,324,3.93,325,3.26,326,3.26,327,1.559,328,1.559,329,2.174,330,2.231,331,1.559,332,2.174,333,2.174,334,1.803,335,1.803,336,2.174,337,2.174,338,2.712,339,3.27,340,2.174,341,2.174,342,2.174,343,2.174,344,2.174]],["title/modules/PostsModule.html",[39,1.092,52,1.764]],["body/modules/PostsModule.html",[2,1.638,3,0.521,4,0.46,5,0.46,13,0.035,22,0.883,23,0.966,29,0.521,30,0.15,37,0.026,38,0.026,39,1.814,41,1.525,42,1.525,43,2.051,44,2.051,45,1.676,46,2.931,47,2.051,52,3.385,53,2.683,54,2.647,55,2.051,56,2.051,58,2.961,61,2.598,293,3.278,330,2.96,331,2.598,345,3.005,346,3.622,347,3.005,348,3.622,349,3.622]],["title/injectables/PostsService.html",[63,1.196,330,1.59]],["body/injectables/PostsService.html",[3,0.329,4,0.291,5,0.291,7,0.369,8,1.431,13,0.036,15,1.08,17,1.431,18,1.184,22,0.654,23,0.61,29,0.329,30,0.095,31,1.899,32,1.297,33,1.431,37,0.019,38,0.019,63,1.305,64,1.297,72,2.152,84,0.984,87,2.069,88,1.706,89,1.556,93,2.788,95,2.113,96,1.899,101,1.45,107,1.45,108,1.824,110,1.642,111,1.169,122,2.842,130,2.653,135,4.997,144,4.602,185,1.45,189,1.45,209,1.297,226,1.735,267,1.45,288,2.833,292,1.06,311,1.899,327,1.642,328,1.642,330,1.735,350,1.899,351,2.819,352,2.29,353,2.29,354,3.399,355,2.29,356,3.399,357,2.29,358,2.29,359,2.29,360,2.29,361,2.29,362,1.642,363,3.399,364,3.399,365,1.45,366,3.399,367,3.399,368,1.45,369,3.399,370,1.642,371,3.399,372,3.399,373,3.399,374,1.45,375,3.399]],["title/classes/UpdatePostDto.html",[30,0.129,313,1.973]],["body/classes/UpdatePostDto.html",[3,0.541,4,0.478,5,0.478,7,0.607,12,1.443,13,0.035,15,1.002,18,1.399,22,0.85,25,1.443,29,0.541,30,0.198,37,0.027,38,0.027,84,0.913,93,2.216,130,1.92,131,1.74,134,2.016,145,2.696,146,2.711,159,1.583,212,3.434,218,3.032,220,3.032,224,1.92,226,1.92,288,2.924,292,1.74,313,3.032,328,2.696,376,3.119,377,3.972,378,4.788,379,3.76,380,3.76,381,3.119]],["title/classes/UpdateUserDto.html",[30,0.129,382,1.764]],["body/classes/UpdateUserDto.html",[3,0.624,4,0.551,5,0.551,13,0.034,22,0.844,29,0.624,30,0.18,37,0.029,38,0.029,131,2.007,225,3.11,226,2.214,248,2.456,250,3.11,377,4.339,381,3.597,382,2.962,383,3.597,384,5.231,385,3.597,386,3.11]],["title/interfaces/User.html",[108,0.997,387,1.973]],["body/interfaces/User.html",[3,0.537,4,0.474,5,0.474,7,0.602,13,0.035,18,1.81,29,0.537,37,0.027,38,0.027,84,1.387,89,1.829,105,2.824,106,2.824,108,1.68,134,2.006,251,3.503,252,3.503,276,2.973,288,2.824,387,2.363,388,3.732,389,3.095]],["title/controllers/UsersController.html",[0,1.196,390,1.973]],["body/controllers/UsersController.html",[0,0.721,2,0.658,3,0.27,4,0.239,5,0.239,7,0.303,8,1.23,12,1.554,13,0.035,15,1.079,17,1.704,22,0.809,23,0.5,24,1.189,25,0.721,29,0.27,30,0.078,32,1.655,33,1.704,37,0.016,38,0.016,79,1.346,84,1.217,87,2.067,88,1.956,89,1.554,90,2.096,91,1.189,92,1.346,93,0.869,94,1.557,95,1.51,97,1.874,101,1.189,102,1.557,103,2.096,107,1.189,108,1.487,110,1.346,111,1.832,122,3.086,123,2.424,142,1.346,147,2.904,159,2.112,173,3.177,234,2.904,248,2.631,276,3.165,285,3.039,292,0.869,305,2.424,317,2.424,322,2.976,323,1.557,325,2.424,326,2.424,327,1.346,338,1.557,374,1.85,382,2.841,386,2.096,390,1.85,391,1.557,392,3.072,393,2.424,394,2.922,395,3.588,396,2.976,397,1.877,398,2.922,399,1.877,400,1.877,401,2.922,402,1.877,403,2.424,404,2.424,405,1.877,406,4.161,407,1.877,408,1.877,409,1.877,410,3.358,411,1.877,412,1.877,413,1.877,414,3.588,415,2.922,416,1.877,417,1.877,418,3.588,419,1.877,420,3.588,421,1.877,422,1.557,423,1.557,424,1.557,425,1.557,426,1.557,427,1.877,428,1.877,429,1.877,430,1.877,431,1.877,432,1.877,433,1.877,434,1.877,435,1.877,436,1.877,437,1.877,438,1.877,439,1.877,440,1.877,441,1.877,442,1.877]],["title/modules/UsersModule.html",[39,1.092,53,1.442]],["body/modules/UsersModule.html",[2,1.619,3,0.512,4,0.452,5,0.452,13,0.035,22,0.877,23,0.948,29,0.512,30,0.147,37,0.026,38,0.026,39,1.798,41,1.497,42,1.497,43,2.014,44,2.014,45,1.646,46,2.906,47,2.906,51,2.359,53,2.719,54,2.617,55,2.014,56,2.014,58,2.253,59,2.951,91,2.926,95,2.59,390,3.25,425,2.951,443,2.951,444,2.951,445,2.951,446,3.557,447,3.557]],["title/injectables/UsersService.html",[63,1.196,95,1.311]],["body/injectables/UsersService.html",[3,0.241,4,0.213,5,0.213,7,0.538,8,1.125,13,0.036,15,1.108,17,1.749,18,0.974,22,0.614,23,0.447,29,0.241,30,0.069,33,2.031,37,0.015,38,0.015,63,1.026,64,0.95,84,1.008,87,2.121,88,1.749,89,1.595,95,1.125,105,2.704,106,2.602,107,2.631,108,1.888,122,3.122,173,2.409,185,1.062,189,1.062,209,0.95,251,3.228,252,3.228,255,1.202,263,1.202,267,1.062,276,3,282,1.202,285,2.631,288,2.815,292,1.543,351,2.765,362,1.202,365,1.062,368,1.062,370,1.202,374,1.062,382,2.154,386,1.202,392,1.693,393,2.217,396,2.217,403,1.391,404,4.124,406,3.155,422,1.391,423,1.391,424,1.391,426,1.391,448,1.202,449,2.673,450,2.673,451,2.673,452,3.334,453,1.677,454,1.677,455,1.677,456,2.673,457,1.677,458,2.673,459,1.677,460,2.673,461,1.677,462,4.228,463,1.391,464,1.391,465,1.391,466,1.391,467,1.391,468,1.391,469,1.391,470,1.391,471,1.391,472,1.391,473,1.391,474,1.391,475,1.391,476,1.391,477,1.391,478,1.391,479,1.391,480,1.391,481,1.391,482,1.391,483,1.391,484,1.391,485,1.391,486,1.391,487,1.391,488,1.391,489,1.391,490,1.677,491,2.673,492,1.677,493,1.677,494,2.673,495,2.673,496,1.677,497,3.334,498,1.677]],["title/coverage.html",[499,3.034]],["body/coverage.html",[0,1.972,1,1.957,5,0.393,6,2.564,13,0.035,26,1.578,30,0.23,37,0.024,38,0.024,45,1.43,63,1.972,65,2.564,77,1.957,78,2.564,84,0.75,95,1.301,97,1.43,108,1.347,111,1.578,121,2.564,130,1.578,132,3.018,133,2.564,156,1.957,160,2.216,227,1.957,244,2.564,248,1.75,249,2.564,250,3.018,285,1.75,286,2.564,287,2.564,293,1.957,294,2.564,313,1.957,330,1.578,350,2.564,376,2.564,382,1.75,383,2.564,387,1.957,389,2.564,390,1.957,391,2.564,392,1.957,448,3.018,499,2.216,500,2.564,501,3.091,502,3.091,503,6.179,504,5.136,505,4.784,506,4.208,507,2.564,508,3.091,509,4.784,510,3.091,511,4.208,512,4.208,513,3.091,514,3.091,515,3.091]],["title/dependencies.html",[42,1.575,516,2.166]],["body/dependencies.html",[13,0.035,23,1.112,25,1.601,30,0.212,37,0.029,38,0.029,42,1.756,214,2.992,224,2.13,225,2.992,385,3.461,517,4.172,518,4.172,519,5.523,520,4.172,521,4.172,522,4.172,523,4.172,524,4.172,525,4.172,526,4.172,527,4.172,528,4.172,529,4.172,530,4.172,531,4.172]],["title/miscellaneous/enumerations.html",[532,1.333,533,3.103]],["body/miscellaneous/enumerations.html",[7,0.657,13,0.035,37,0.028,38,0.028,93,1.883,138,4.174,173,3.186,174,4.174,175,4.174,198,4.531,199,4.174,201,4.174,202,4.174,233,4.174,240,3.874,532,2.077,533,3.375,534,5.032,535,4.069]],["title/miscellaneous/functions.html",[532,1.333,536,3.103]],["body/miscellaneous/functions.html",[7,0.763,13,0.031,37,0.031,38,0.031,45,2.696,507,3.924,532,2.415,536,3.924,537,4.73]],["title/index.html",[7,0.421,538,2.612,539,2.612]],["body/index.html",[2,1.049,4,0.246,13,0.033,37,0.017,38,0.017,39,1.049,41,0.815,42,1.54,71,1.606,73,3.73,74,3.035,88,1.733,111,1.528,146,3.063,159,1.54,172,1.606,226,1.528,331,2.146,334,1.606,335,1.606,499,1.388,500,3.035,540,3.035,541,5.313,542,4.45,543,2.993,544,3.658,545,1.936,546,2.482,547,1.936,548,4.705,549,2.993,550,2.993,551,1.936,552,1.936,553,1.936,554,1.936,555,1.936,556,3.658,557,1.936,558,1.936,559,1.936,560,1.936,561,3.658,562,1.936,563,1.936,564,2.993,565,1.936,566,1.936,567,2.993,568,5.562,569,5.562,570,1.936,571,4.45,572,4.705,573,3.658,574,1.936,575,5.068,576,1.936,577,3.035,578,3.658,579,5.068,580,3.658,581,1.936,582,4.116,583,1.936,584,1.936,585,1.936,586,1.936,587,4.116,588,4.116,589,1.936,590,2.993,591,1.936,592,1.936,593,1.936,594,1.936,595,1.936,596,2.993,597,1.936,598,2.993,599,1.936,600,1.936,601,1.936,602,1.936,603,1.936,604,2.993,605,1.936,606,1.936,607,1.936,608,1.936,609,1.936,610,1.936,611,1.936,612,1.936,613,1.936,614,1.936,615,1.606,616,1.936,617,1.936,618,1.936,619,1.936,620,1.936,621,2.993,622,2.993,623,3.658,624,4.116,625,1.936,626,1.936,627,2.993,628,1.936,629,3.658,630,1.936,631,1.936,632,1.936,633,2.993,634,1.936,635,1.936,636,1.936,637,2.993,638,1.936,639,1.936,640,2.993,641,1.936,642,2.993,643,2.993,644,1.936,645,1.936,646,1.936,647,1.936,648,1.936,649,1.936,650,1.936,651,1.936,652,1.936,653,1.936,654,1.936,655,1.936,656,1.936,657,1.936,658,1.936,659,1.936,660,1.936,661,1.936,662,1.936,663,1.936]],["title/modules.html",[41,1.781]],["body/modules.html",[13,0.03,37,0.03,38,0.03,40,2.82,41,1.875,51,2.274,52,2.522,53,2.061,664,5.885,665,5.885,666,5.885,667,5.885]],["title/overview.html",[668,3.509]],["body/overview.html",[2,1.179,13,0.034,26,2.549,37,0.025,38,0.025,39,1.179,40,3.808,41,1.416,42,1.416,43,1.905,44,1.905,45,1.557,46,1.905,47,1.905,48,2.79,49,2.79,50,2.79,51,2.901,52,3.282,53,2.682,54,2.522,55,1.905,56,1.905,64,1.905,95,2.44,97,2.682,116,2.79,117,2.79,118,2.79,131,1.557,292,1.557,330,2.549,345,2.79,347,2.79,365,3.162,368,2.13,387,2.13,443,2.79,444,2.79,445,2.79,668,2.79]],["title/properties.html",[134,1.575,516,2.166]],["body/properties.html",[13,0.034,37,0.03,38,0.03,73,3.253,134,1.909,159,1.909,540,3.762,546,3.762,577,3.762,615,3.762,669,4.535,670,4.535,671,4.535,672,4.535,673,4.535,674,4.535]],["title/miscellaneous/variables.html",[532,1.333,675,3.103]],["body/miscellaneous/variables.html",[7,0.475,13,0.035,37,0.023,38,0.023,84,0.714,105,2.994,106,2.994,108,0.942,185,1.864,189,1.864,209,1.667,240,1.864,251,3.714,252,3.714,255,2.111,263,2.111,267,1.864,282,2.111,288,2.994,292,1.362,362,2.111,365,1.864,368,1.864,370,2.111,374,1.864,392,2.577,410,2.442,448,2.111,462,4.864,463,2.442,464,2.442,465,2.442,466,2.442,467,2.442,468,2.442,469,2.442,470,2.442,471,2.442,472,2.442,473,2.442,474,2.442,475,2.442,476,2.442,477,2.442,478,2.442,479,2.442,480,2.442,481,2.442,482,2.442,483,2.442,484,2.442,485,2.442,486,2.442,487,2.442,488,2.442,489,2.442,532,1.503,675,2.442,676,2.943]],["title/routes.html",[677,3.509]],["body/routes.html",[13,0.032,37,0.032,38,0.032,677,4.06]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":670,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["01'})@isdate()@isnotempty",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1",{"_index":292,"title":{},"body":{"classes/GetUserParamDto.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1'})@apiquery({name",{"_index":411,"title":{},"body":{"controllers/UsersController.html":{}}}],["1'})@isstring()@isnotempty",{"_index":379,"title":{},"body":{"classes/UpdatePostDto.html":{}}}],["1.1.23",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":374,"title":{},"body":{"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["11.0.1",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["1})@isnumber()@isoptional()@type(undefined",{"_index":289,"title":{},"body":{"classes/GetUserParamDto.html":{}}}],["2",{"_index":362,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["2.1.0",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":260,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["200",{"_index":317,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":304,"title":{},"body":{"controllers/PostsController.html":{}}}],["2021",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["20})@isstring()@isnotempty()@minlength(3",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["20})@isstring()@isnotempty()@minlength(8",{"_index":268,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["3",{"_index":209,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":365,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":368,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":370,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["7.3.0",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":267,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":658,"title":{},"body":{"index.html":{}}}],["add",{"_index":633,"title":{},"body":{"index.html":{}}}],["allow",{"_index":300,"title":{},"body":{"controllers/PostsController.html":{}}}],["anderson",{"_index":485,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["apibody",{"_index":324,"title":{},"body":{"controllers/PostsController.html":{}}}],["apioperation",{"_index":325,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":212,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdatePostDto.html":{}}}],["apiproperty({description",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdatePostDto.html":{}}}],["apiproperty({type",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional",{"_index":213,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUserParamDto.html":{}}}],["apipropertyoptional({description",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUserParamDto.html":{}}}],["apiquery",{"_index":420,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":326,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('app",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('authentication",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('posts",{"_index":333,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":428,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module.ts",{"_index":602,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":577,"title":{},"body":{"index.html":{},"properties.html":{}}}],["applications",{"_index":563,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":40,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":26,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":596,"title":{},"body":{"index.html":{}}}],["array",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":77,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":51,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":673,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":97,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":654,"title":{},"body":{"index.html":{}}}],["b",{"_index":626,"title":{},"body":{"index.html":{}}}],["backend",{"_index":547,"title":{},"body":{"index.html":{}}}],["body",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["body.password",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":623,"title":{},"body":{"index.html":{}}}],["brown",{"_index":476,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":667,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":664,"title":{},"body":{"modules.html":{}}}],["building",{"_index":557,"title":{},"body":{"index.html":{}}}],["built",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["cd",{"_index":573,"title":{},"body":{"index.html":{}}}],["changes",{"_index":629,"title":{},"body":{"index.html":{}}}],["character",{"_index":284,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["character'})@maxlength(20",{"_index":278,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["checkout",{"_index":625,"title":{},"body":{"index.html":{}}}],["class",{"_index":30,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["click",{"_index":646,"title":{},"body":{"index.html":{}}}],["clone",{"_index":571,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":345,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":346,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":347,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":443,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":444,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":445,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":598,"title":{},"body":{"index.html":{}}}],["commit",{"_index":637,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["concepts",{"_index":553,"title":{},"body":{"index.html":{}}}],["configured",{"_index":661,"title":{},"body":{"index.html":{}}}],["console.log('@findall",{"_index":490,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(postid",{"_index":344,"title":{},"body":{"controllers/PostsController.html":{}}}],["const",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["constructor(private",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/PostsService.html":{}}}],["constructor(usersservice",{"_index":352,"title":{},"body":{"injectables/PostsService.html":{}}}],["contain",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["contains",{"_index":543,"title":{},"body":{"index.html":{}}}],["content",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["contribute",{"_index":619,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":616,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":617,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":332,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":427,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["course",{"_index":549,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":499,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":226,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{}}}],["create(createpostdto",{"_index":354,"title":{},"body":{"injectables/PostsService.html":{}}}],["created",{"_index":306,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost",{"_index":295,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(@body",{"_index":340,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":298,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostdto",{"_index":130,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["createpostdto})@apiresponse({status",{"_index":303,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostsmetaoptionsdto",{"_index":156,"title":{"classes/CreatePostsMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"coverage.html":{}}}],["createuser",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser(@body",{"_index":436,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":397,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(user",{"_index":451,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":248,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["credentials",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["date",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["david",{"_index":478,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["david.miller@example.com",{"_index":480,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["davis",{"_index":470,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"classes/UpdatePostDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":410,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["defaultvaluepipe",{"_index":417,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":432,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":434,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["demonstrates",{"_index":605,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":42,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":334,"title":{},"body":{"controllers/PostsController.html":{},"index.html":{}}}],["description",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"classes/UpdatePostDto.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":339,"title":{},"body":{"controllers/PostsController.html":{}}}],["details'})@apibody({type",{"_index":302,"title":{},"body":{"controllers/PostsController.html":{}}}],["development",{"_index":548,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":500,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":263,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["dots/create",{"_index":327,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["dots/get",{"_index":422,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dots/patch.dto",{"_index":329,"title":{},"body":{"controllers/PostsController.html":{}}}],["dots/update",{"_index":424,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["draft",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["e2e",{"_index":589,"title":{},"body":{"index.html":{}}}],["each",{"_index":207,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":558,"title":{},"body":{"index.html":{}}}],["eighth",{"_index":372,"title":{},"body":{"injectables/PostsService.html":{}}}],["email",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["emily",{"_index":469,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["emily.davis@example.com",{"_index":471,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":635,"title":{},"body":{"index.html":{}}}],["entry",{"_index":600,"title":{},"body":{"index.html":{}}}],["enum",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":533,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["environment",{"_index":653,"title":{},"body":{"index.html":{}}}],["error",{"_index":611,"title":{},"body":{"index.html":{}}}],["example",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/UpdatePostDto.html":{},"index.html":{}}}],["existing",{"_index":631,"title":{},"body":{"index.html":{}}}],["export",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":377,"title":{},"body":{"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{}}}],["false",{"_index":234,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["false})@isarray()@isstring({each",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["false})@isstring()@isoptional",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["false})@isstring()@isoptional()@minlength(3",{"_index":264,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["feat",{"_index":639,"title":{},"body":{"index.html":{}}}],["feature",{"_index":624,"title":{},"body":{"index.html":{}}}],["feature/your",{"_index":627,"title":{},"body":{"index.html":{}}}],["featured",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["featuredimageurl",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["features",{"_index":604,"title":{},"body":{"index.html":{}}}],["fifth",{"_index":367,"title":{},"body":{"injectables/PostsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":351,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall(getuserparamdto",{"_index":454,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(userid",{"_index":356,"title":{},"body":{"injectables/PostsService.html":{}}}],["findonebyemail",{"_index":449,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":456,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid",{"_index":450,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":458,"title":{},"body":{"injectables/UsersService.html":{}}}],["first",{"_index":72,"title":{},"body":{"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"injectables/PostsService.html":{}}}],["firstname",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["follow",{"_index":630,"title":{},"body":{"index.html":{}}}],["following",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["follows",{"_index":594,"title":{},"body":{"index.html":{}}}],["fork",{"_index":620,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["found",{"_index":361,"title":{},"body":{"injectables/PostsService.html":{}}}],["fourth",{"_index":366,"title":{},"body":{"injectables/PostsService.html":{}}}],["framework",{"_index":546,"title":{},"body":{"index.html":{},"properties.html":{}}}],["function",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":634,"title":{},"body":{"index.html":{}}}],["functions",{"_index":536,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":401,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('about",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["get('welcome",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["get('{/:userid",{"_index":309,"title":{},"body":{"controllers/PostsController.html":{}}}],["get()@apioperation({summary",{"_index":407,"title":{},"body":{"controllers/UsersController.html":{}}}],["getabout",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getposts",{"_index":296,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param('userid",{"_index":336,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":308,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":538,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(@param",{"_index":441,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(params",{"_index":400,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserparamdto",{"_index":285,"title":{"classes/GetUserParamDto.html":{}},"body":{"classes/GetUserParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["getusers",{"_index":395,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getuserparamdto",{"_index":405,"title":{},"body":{"controllers/UsersController.html":{}}}],["getwelcome",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["git",{"_index":572,"title":{},"body":{"index.html":{}}}],["given",{"_index":301,"title":{},"body":{"controllers/PostsController.html":{}}}],["go",{"_index":644,"title":{},"body":{"index.html":{}}}],["handling",{"_index":612,"title":{},"body":{"index.html":{}}}],["hands",{"_index":551,"title":{},"body":{"index.html":{}}}],["hello",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["here's",{"_index":618,"title":{},"body":{"index.html":{}}}],["higher",{"_index":566,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":655,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/api",{"_index":659,"title":{},"body":{"index.html":{}}}],["https://example.com/image.jpg",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://github.com/yourusername/project",{"_index":621,"title":{},"body":{"index.html":{}}}],["hyphens",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["id",{"_index":288,"title":{},"body":{"classes/GetUserParamDto.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["implementation",{"_index":552,"title":{},"body":{"index.html":{}}}],["import",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["including",{"_index":607,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["inject(forwardref",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["injectable",{"_index":63,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injection",{"_index":335,"title":{},"body":{"controllers/PostsController.html":{},"index.html":{}}}],["install",{"_index":575,"title":{},"body":{"index.html":{}}}],["installation",{"_index":570,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":576,"title":{},"body":{"index.html":{}}}],["interface",{"_index":387,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":388,"title":{},"body":{"interfaces/User.html":{}}}],["intro",{"_index":574,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":215,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["isdate",{"_index":216,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isemail",{"_index":280,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":217,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":232,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":231,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":218,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdatePostDto.html":{}}}],["isnumber",{"_index":291,"title":{},"body":{"classes/GetUserParamDto.html":{}}}],["isoptional",{"_index":219,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{}}}],["isstring",{"_index":220,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdatePostDto.html":{}}}],["isstring()@isnotempty",{"_index":245,"title":{},"body":{"classes/CreatePostsMetaOptionsDto.html":{}}}],["items",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["james",{"_index":484,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["james.anderson@example.com",{"_index":486,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["jane",{"_index":463,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["jane.smith@example.com",{"_index":465,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["jennifer",{"_index":481,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["jennifer.taylor@example.com",{"_index":483,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["john",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["john.doe@example.com",{"_index":282,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["john.doe@example.com'})@isemail()@isnotempty",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["johnson",{"_index":467,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":238,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{}}}],["last",{"_index":262,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lastname",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":650,"title":{},"body":{"index.html":{}}}],["learning",{"_index":540,"title":{},"body":{"index.html":{},"properties.html":{}}}],["legend",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["less",{"_index":259,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["letter",{"_index":274,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["letters",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["license",{"_index":615,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":663,"title":{},"body":{"index.html":{}}}],["limit",{"_index":406,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["lisa",{"_index":487,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["lisa.thomas@example.com",{"_index":489,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["login",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(body",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(email",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":210,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["long'})@matches(/^(?=.*[a",{"_index":269,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["long'})@matches(/^[a",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["long'})@maxlength(20",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lowercase",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["m",{"_index":638,"title":{},"body":{"index.html":{}}}],["main.ts",{"_index":599,"title":{},"body":{"index.html":{}}}],["maitrongnhan99",{"_index":674,"title":{},"body":{"properties.html":{}}}],["make",{"_index":628,"title":{},"body":{"index.html":{}}}],["masterclass",{"_index":544,"title":{},"body":{"index.html":{}}}],["matches",{"_index":221,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":230,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["maxlength",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(20",{"_index":281,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["meta",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"coverage.html":{}}}],["metadata",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["metakey",{"_index":239,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["metaoptions",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["metavalue",{"_index":241,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["michael",{"_index":466,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["michael.johnson@example.com",{"_index":468,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["middleware",{"_index":609,"title":{},"body":{"index.html":{}}}],["miller",{"_index":479,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["minlength",{"_index":222,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":237,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(5",{"_index":229,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":283,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":532,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":662,"title":{},"body":{"index.html":{}}}],["mode",{"_index":578,"title":{},"body":{"index.html":{}}}],["module",{"_index":39,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":41,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":613,"title":{},"body":{"index.html":{}}}],["name",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["name.git",{"_index":622,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":73,"title":{},"body":{"injectables/AppService.html":{},"index.html":{},"properties.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":385,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"classes/UpdatePostDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"index.html":{}}}],["newuser",{"_index":491,"title":{},"body":{"injectables/UsersService.html":{}}}],["ninth",{"_index":373,"title":{},"body":{"injectables/PostsService.html":{}}}],["node.js",{"_index":556,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":545,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":358,"title":{},"body":{"injectables/PostsService.html":{}}}],["notfoundexception('user",{"_index":360,"title":{},"body":{"injectables/PostsService.html":{}}}],["npm",{"_index":568,"title":{},"body":{"index.html":{}}}],["null",{"_index":404,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["number",{"_index":276,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["numbers",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["object",{"_index":242,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["omit",{"_index":452,"title":{},"body":{"injectables/UsersService.html":{}}}],["once",{"_index":656,"title":{},"body":{"index.html":{}}}],["one",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["option",{"_index":243,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["optional",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dto",{"_index":228,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dto.ts",{"_index":244,"title":{},"body":{"classes/CreatePostsMetaOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:6",{"_index":246,"title":{},"body":{"classes/CreatePostsMetaOptionsDto.html":{}}}],["options.dto.ts:9",{"_index":247,"title":{},"body":{"classes/CreatePostsMetaOptionsDto.html":{}}}],["origin",{"_index":641,"title":{},"body":{"index.html":{}}}],["original",{"_index":645,"title":{},"body":{"index.html":{}}}],["out",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":668,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":516,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["pagination",{"_index":429,"title":{},"body":{"controllers/UsersController.html":{}}}],["pagination'})@apiresponse({status",{"_index":408,"title":{},"body":{"controllers/UsersController.html":{}}}],["param",{"_index":322,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["param('postid",{"_index":343,"title":{},"body":{"controllers/PostsController.html":{}}}],["param.dto",{"_index":423,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param.dto.ts",{"_index":287,"title":{},"body":{"classes/GetUserParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:14",{"_index":290,"title":{},"body":{"classes/GetUserParamDto.html":{}}}],["parameters",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":403,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseintpipe",{"_index":418,"title":{},"body":{"controllers/UsersController.html":{}}}],["partialtype",{"_index":381,"title":{},"body":{"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createpostdto",{"_index":378,"title":{},"body":{"classes/UpdatePostDto.html":{}}}],["partialtype(createuserdto",{"_index":384,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pass",{"_index":636,"title":{},"body":{"index.html":{}}}],["password",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["password1",{"_index":266,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["password123",{"_index":462,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":323,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patch('/:id",{"_index":415,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('{/:postid",{"_index":342,"title":{},"body":{"controllers/PostsController.html":{}}}],["patch('{/:postid}')@apioperation({summary",{"_index":314,"title":{},"body":{"controllers/PostsController.html":{}}}],["pick",{"_index":414,"title":{},"body":{"controllers/UsersController.html":{}}}],["point",{"_index":601,"title":{},"body":{"index.html":{}}}],["post",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@isstring()@isnotempty()@minlength(5",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post('/create",{"_index":398,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('login",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apioperation({summary",{"_index":299,"title":{},"body":{"controllers/PostsController.html":{}}}],["postid",{"_index":320,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts",{"_index":227,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["posts.controller",{"_index":349,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts.dto",{"_index":328,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{}}}],["posts.dto.ts",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["posts.dto.ts:102",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts.dto.ts:113",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts.dto.ts:139",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts.dto.ts:26",{"_index":211,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts.dto.ts:41",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts.dto.ts:54",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts.dto.ts:67",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts.dto.ts:76",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts.dto.ts:85",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts.dto.ts:94",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["postscontroller",{"_index":293,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":52,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":330,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["poststatus'})@isenum(poststatus",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posttype",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype'})@isnotempty()@isenum(posttype",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["practice",{"_index":671,"title":{},"body":{"properties.html":{}}}],["prefix",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["prerequisites",{"_index":564,"title":{},"body":{"index.html":{}}}],["private",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["production",{"_index":583,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":555,"title":{},"body":{"index.html":{}}}],["project",{"_index":541,"title":{},"body":{"index.html":{}}}],["properties",{"_index":134,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/UpdatePostDto.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provide",{"_index":648,"title":{},"body":{"index.html":{}}}],["providers",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["public",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["publish",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["published",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["publishon",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["pull",{"_index":642,"title":{},"body":{"index.html":{}}}],["push",{"_index":640,"title":{},"body":{"index.html":{}}}],["query",{"_index":419,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":433,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":431,"title":{},"body":{"controllers/UsersController.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["recommended",{"_index":567,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["reliable",{"_index":559,"title":{},"body":{"index.html":{}}}],["repository",{"_index":542,"title":{},"body":{"index.html":{}}}],["request",{"_index":643,"title":{},"body":{"index.html":{}}}],["required",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["reset",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":614,"title":{},"body":{"index.html":{}}}],["results",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["retrieved",{"_index":430,"title":{},"body":{"controllers/UsersController.html":{}}}],["retrieved.'})@apiquery({name",{"_index":409,"title":{},"body":{"controllers/UsersController.html":{}}}],["return",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":233,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["review'})@isnotempty",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["robert",{"_index":472,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["robert.wilson@example.com",{"_index":474,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":603,"title":{},"body":{"index.html":{}}}],["routes",{"_index":677,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["routing",{"_index":608,"title":{},"body":{"index.html":{}}}],["run",{"_index":579,"title":{},"body":{"index.html":{}}}],["running",{"_index":657,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["sarah",{"_index":475,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sarah.brown@example.com",{"_index":477,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":560,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["schema",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["second",{"_index":363,"title":{},"body":{"injectables/PostsService.html":{}}}],["select",{"_index":647,"title":{},"body":{"index.html":{}}}],["series",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["server",{"_index":561,"title":{},"body":{"index.html":{}}}],["services",{"_index":331,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"index.html":{}}}],["setting",{"_index":651,"title":{},"body":{"index.html":{}}}],["seventh",{"_index":371,"title":{},"body":{"injectables/PostsService.html":{}}}],["side",{"_index":562,"title":{},"body":{"index.html":{}}}],["simple",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["sixth",{"_index":369,"title":{},"body":{"injectables/PostsService.html":{}}}],["slug",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["smith",{"_index":464,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spaces",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["special",{"_index":277,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src",{"_index":597,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":537,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../posts.enum.ts",{"_index":534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.service.ts",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/app.controller.ts:11",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.controller.ts:16",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.controller.ts:21",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.module.ts",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.service.ts",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app/app.service.ts:13",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:5",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:9",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:23",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":421,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:9",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":507,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dots/create",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/dots/patch.dto.ts",{"_index":376,"title":{},"body":{"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["src/posts/dots/patch.dto.ts:12",{"_index":380,"title":{},"body":{"classes/UpdatePostDto.html":{}}}],["src/posts/posts.controller.ts",{"_index":294,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:19",{"_index":310,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:34",{"_index":307,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:49",{"_index":319,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["src/posts/posts.module.ts",{"_index":348,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/services/posts.service.ts",{"_index":350,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/services/posts.service.ts:6",{"_index":353,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/services/posts.service.ts:77",{"_index":355,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/services/posts.service.ts:8",{"_index":357,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/types/posts.enum.ts",{"_index":535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/users/dots/create",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dots/get",{"_index":286,"title":{},"body":{"classes/GetUserParamDto.html":{},"coverage.html":{}}}],["src/users/dots/update",{"_index":383,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:53",{"_index":412,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:62",{"_index":399,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:71",{"_index":416,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:79",{"_index":402,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":446,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PostsService.html":{}}}],["src/users/users.service.ts",{"_index":448,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts:107",{"_index":461,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:119",{"_index":457,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:81",{"_index":455,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:90",{"_index":453,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:99",{"_index":459,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.type.ts",{"_index":389,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["standard",{"_index":595,"title":{},"body":{"index.html":{}}}],["start",{"_index":580,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":582,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":584,"title":{},"body":{"index.html":{}}}],["start:prodtesting",{"_index":585,"title":{},"body":{"index.html":{}}}],["started",{"_index":539,"title":{"index.html":{}},"body":{}}],["statements",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["story",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["string",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["structure",{"_index":593,"title":{},"body":{"index.html":{}}}],["style",{"_index":632,"title":{},"body":{"index.html":{}}}],["successfully",{"_index":305,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["summary",{"_index":338,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":665,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":666,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":660,"title":{},"body":{"index.html":{}}}],["table",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["tag1",{"_index":235,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tag2",{"_index":236,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tags",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["taught",{"_index":554,"title":{},"body":{"index.html":{}}}],["taylor",{"_index":482,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["tenth",{"_index":375,"title":{},"body":{"injectables/PostsService.html":{}}}],["test",{"_index":588,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":591,"title":{},"body":{"index.html":{}}}],["test:covproject",{"_index":592,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":590,"title":{},"body":{"index.html":{}}}],["tests",{"_index":587,"title":{},"body":{"index.html":{}}}],["third",{"_index":364,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.appservice.getabout",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.getwelcome",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.isauth",{"_index":437,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.login(body.email",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.postsservice.create(createpostdto",{"_index":341,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.findall(userid",{"_index":337,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.usersservice.createuser(createuserdto",{"_index":439,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(getuserparamdto",{"_index":435,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyemail(body.email",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findonebyid(number(userid",{"_index":359,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.usersservice.findonebyid(params?.id",{"_index":442,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateuser(getuserparamdto.id",{"_index":440,"title":{},"body":{"controllers/UsersController.html":{}}}],["thomas",{"_index":488,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["throw",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["title",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["token",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformer",{"_index":214,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUserParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{}}}],["true})@isoptional()@minlength(3",{"_index":206,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["type",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":225,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["udemy",{"_index":550,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["unauthorizedexception('invalid",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception('unauthorized",{"_index":438,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isarray()@isnotempty()@validatenested({each",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":586,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":672,"title":{},"body":{"properties.html":{}}}],["up",{"_index":652,"title":{},"body":{"index.html":{}}}],["update",{"_index":315,"title":{},"body":{"controllers/PostsController.html":{}}}],["updated",{"_index":318,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost",{"_index":297,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(postid",{"_index":312,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepostdto",{"_index":313,"title":{"classes/UpdatePostDto.html":{}},"body":{"controllers/PostsController.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["updatepostdto})@apiresponse({status",{"_index":316,"title":{},"body":{"controllers/PostsController.html":{}}}],["updateuser",{"_index":396,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuser(getuserparamdto",{"_index":413,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuser(id",{"_index":460,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":382,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uppercase",{"_index":275,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["url",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":108,"title":{"interfaces/User.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":386,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:27",{"_index":261,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:44",{"_index":265,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:52",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:75",{"_index":279,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":498,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.id",{"_index":495,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":311,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["users",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":447,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.find((user",{"_index":494,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.findindex((user",{"_index":496,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.length",{"_index":492,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.push(newuser",{"_index":493,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":425,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users.type",{"_index":426,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users[index",{"_index":497,"title":{},"body":{"injectables/UsersService.html":{}}}],["userscontroller",{"_index":390,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":53,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":95,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["v14",{"_index":649,"title":{},"body":{"index.html":{}}}],["v18.x",{"_index":565,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":223,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validation",{"_index":610,"title":{},"body":{"index.html":{}}}],["validator",{"_index":224,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/UpdatePostDto.html":{},"dependencies.html":{}}}],["value",{"_index":240,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":675,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":606,"title":{},"body":{"index.html":{}}}],["version",{"_index":669,"title":{},"body":{"properties.html":{}}}],["void",{"_index":321,"title":{},"body":{"controllers/PostsController.html":{}}}],["watch",{"_index":581,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":71,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["wilson",{"_index":473,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["world",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":569,"title":{},"body":{"index.html":{}}}],["z0",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z\\d@$!%*?&]{8",{"_index":273,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":270,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&])[a",{"_index":271,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":272,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getAbout\n                            \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAbout\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAbout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('about')\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getWelcome\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWelcome()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('welcome')\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@Controller()\n@ApiTags('App')\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @Get('welcome')\n  getWelcome(): string {\n    return this.appService.getWelcome();\n  }\n\n  @Get('about')\n  getAbout(): string {\n    return this.appService.getAbout();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { PostsModule } from 'src/posts/posts.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAbout\n                            \n                            \n                                getHello\n                            \n                            \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAbout\n                        \n                    \n                \n            \n            \n                \ngetAbout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWelcome\n                        \n                    \n                \n            \n            \n                \ngetWelcome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  getWelcome(): string {\n    return 'Welcome to my first NestJS API';\n  }\n\n  getAbout(): string {\n    return 'This is a simple API built with NestJS';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  forwardRef,\n  Inject,\n  Post,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { UsersService } from 'src/users/users.service';\nimport { AuthService } from './providers/auth.service';\n\n@Controller('auth')\n@ApiTags('Authentication')\nexport class AuthController {\n  constructor(\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n    private readonly authService: AuthService,\n  ) {}\n\n  @Post('login')\n  login(@Body() body: { email: string; password: string }) {\n    const user = this.usersService.findOneByEmail(body.email);\n    if (!user) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n    return this.authService.login(body.email, body.password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UsersModule } from 'src/users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\n\n@Module({\n  providers: [AuthService],\n  controllers: [AuthController],\n  exports: [AuthService],\n  imports: [forwardRef(() => UsersModule)],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {\n  public login(email: string, password: string): string {\n    return `token-${email}-${password}`;\n  }\n\n  public isAuth() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dots/create-posts.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The content of the post', example: 'This is the content of the post', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dots/create-posts.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The featured image url of the post', example: 'https://example.com/image.jpg', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dots/create-posts.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostsMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', description: 'The meta options of the post', example: undefined, items: undefined})@IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dots/create-posts.dto.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The type of the post', example: 'post', enum: PostType, enumName: 'PostType'})@IsNotEmpty()@IsEnum(PostType, {message: 'Post type must be one of the following: post, page, series, story'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dots/create-posts.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The publish date of the post', example: '2021-01-01'})@IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dots/create-posts.dto.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The schema of the post', example: 'This is the schema of the post', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dots/create-posts.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The slug of the post', example: 'my-first-post'})@IsString()@IsNotEmpty()@MinLength(5, {message: 'Slug must be at least 5 characters long'})@Matches(/^[a-z0-9-]+$/, {message: 'Slug must contain only lowercase letters, numbers, and hyphens, without spaces'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dots/create-posts.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The status of the post', example: 'draft', enum: PostStatus, enumName: 'PostStatus'})@IsEnum(PostStatus, {message: 'Post status must be one of the following: draft, published, scheduled, review'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dots/create-posts.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The tags of the post', example: undefined, required: false})@IsArray()@IsString({each: true})@IsOptional()@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dots/create-posts.dto.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The title of the post', example: 'My first post'})@IsString()@IsNotEmpty()@MinLength(5, {message: 'Title must be at least 3 characters long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dots/create-posts.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsDate,\n  IsEnum,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Matches,\n  MinLength,\n  ValidateNested,\n} from 'class-validator';\nimport { PostStatus, PostType } from '../types';\nimport { CreatePostsMetaOptionsDto } from './create-posts-meta-options.dto';\nexport class CreatePostDto {\n  @ApiProperty({\n    description: 'The title of the post',\n    example: 'My first post',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(5, {\n    message: 'Title must be at least 3 characters long',\n  })\n  title: string;\n\n  @ApiProperty({\n    description: 'The slug of the post',\n    example: 'my-first-post',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(5, {\n    message: 'Slug must be at least 5 characters long',\n  })\n  @Matches(/^[a-z0-9-]+$/, {\n    message:\n      'Slug must contain only lowercase letters, numbers, and hyphens, without spaces',\n  })\n  slug: string;\n\n  @ApiProperty({\n    description: 'The type of the post',\n    example: 'post',\n    enum: PostType,\n    enumName: 'PostType',\n  })\n  @IsNotEmpty()\n  @IsEnum(PostType, {\n    message:\n      'Post type must be one of the following: post, page, series, story',\n  })\n  postType: PostType;\n\n  @ApiProperty({\n    description: 'The status of the post',\n    example: 'draft',\n    enum: PostStatus,\n    enumName: 'PostStatus',\n  })\n  @IsEnum(PostStatus, {\n    message:\n      'Post status must be one of the following: draft, published, scheduled, review',\n  })\n  @IsNotEmpty()\n  status: PostStatus;\n\n  @ApiProperty({\n    description: 'The content of the post',\n    example: 'This is the content of the post',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  content?: string;\n\n  @ApiPropertyOptional({\n    description: 'The schema of the post',\n    example: 'This is the schema of the post',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  schema?: string;\n\n  @ApiPropertyOptional({\n    description: 'The featured image url of the post',\n    example: 'https://example.com/image.jpg',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  featuredImageUrl?: string;\n\n  @ApiProperty({\n    description: 'The publish date of the post',\n    example: '2021-01-01',\n  })\n  @IsDate()\n  @IsNotEmpty()\n  publishOn: Date;\n\n  @ApiProperty({\n    description: 'The tags of the post',\n    example: ['tag1', 'tag2'],\n    required: false,\n  })\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiProperty({\n    type: 'array',\n    description: 'The meta options of the post',\n    example: [{ key: 'metaKey', value: 'metaValue' }],\n    items: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'string',\n          description: 'The key of the meta option',\n          example: 'metaKey',\n        },\n        value: {\n          type: 'string',\n          description: 'The value of the meta option',\n          example: 'metaValue',\n        },\n      },\n    },\n  })\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => CreatePostsMetaOptionsDto)\n  metaOptions: CreatePostsMetaOptionsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostsMetaOptionsDto.html":{"url":"classes/CreatePostsMetaOptionsDto.html","title":"class - CreatePostsMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostsMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dots/create-posts-meta-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dots/create-posts-meta-options.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dots/create-posts-meta-options.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePostsMetaOptionsDto {\n  @IsString()\n  @IsNotEmpty()\n  key: string;\n\n  @IsNotEmpty()\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dots/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email of the user', example: 'john.doe@example.com'})@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dots/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The first name of the user', example: 'John', minLength: 3, maxLength: 20})@IsString()@IsNotEmpty()@MinLength(3, {message: 'First name must be at least 3 characters long'})@MaxLength(20, {message: 'First name must be less than 20 characters long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dots/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The last name of the user', example: 'Doe', minLength: 3, maxLength: 20, required: false})@IsString()@IsOptional()@MinLength(3, {message: 'Last name must be at least 3 characters long'})@MaxLength(20, {message: 'Last name must be less than 20 characters long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dots/create-user.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The password of the user', example: 'Password1!', minLength: 8, maxLength: 20})@IsString()@IsNotEmpty()@MinLength(8, {message: 'Password must be at least 8 characters long'})@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: 'Password must contain at least one lowercase letter, one uppercase letter, one number, and one special character'})@MaxLength(20, {message: 'Password must be less than 20 characters long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dots/create-user.dto.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    description: 'The first name of the user',\n    example: 'John',\n    minLength: 3,\n    maxLength: 20,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3, {\n    message: 'First name must be at least 3 characters long',\n  })\n  @MaxLength(20, {\n    message: 'First name must be less than 20 characters long',\n  })\n  firstName: string;\n\n  @ApiProperty({\n    description: 'The last name of the user',\n    example: 'Doe',\n    minLength: 3,\n    maxLength: 20,\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @MinLength(3, {\n    message: 'Last name must be at least 3 characters long',\n  })\n  @MaxLength(20, {\n    message: 'Last name must be less than 20 characters long',\n  })\n  lastName?: string;\n\n  @ApiProperty({\n    description: 'The email of the user',\n    example: 'john.doe@example.com',\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty({\n    description: 'The password of the user',\n    example: 'Password1!',\n    minLength: 8,\n    maxLength: 20,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8, {\n    message: 'Password must be at least 8 characters long',\n  })\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message:\n        'Password must contain at least one lowercase letter, one uppercase letter, one number, and one special character',\n    },\n  )\n  @MaxLength(20, {\n    message: 'Password must be less than 20 characters long',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserParamDto.html":{"url":"classes/GetUserParamDto.html","title":"class - GetUserParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dots/get-user-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'id of the user', type: Number, example: 1})@IsNumber()@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dots/get-user-param.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNumber, IsOptional } from 'class-validator';\n\nexport class GetUserParamDto {\n  @ApiPropertyOptional({\n    description: 'id of the user',\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  @IsOptional()\n  @Type(() => Number)\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new post', description: 'Allow user to create a new post with the given details'})@ApiBody({type: CreatePostDto})@ApiResponse({status: 201, description: 'The post has been successfully created.', type: CreatePostDto})\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('{/:userId}')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(postId: string, updatePostDto: UpdatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('{/:postId}')@ApiOperation({summary: 'Update a post', description: 'Allow user to update a post with the given details'})@ApiBody({type: UpdatePostDto})@ApiResponse({status: 200, description: 'The post has been successfully updated.', type: UpdatePostDto})\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                postId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePostDto\n                                            \n                                                            UpdatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dots/create-posts.dto';\nimport { UpdatePostDto } from './dots/patch.dto';\nimport { PostsService } from './services';\n\n@Controller('posts')\n@ApiTags('Posts')\nexport class PostsController {\n  constructor(\n    /**\n     * Dependency Injection\n     * Inject the PostsService into the PostsController\n     */\n    private readonly postsService: PostsService,\n  ) {}\n\n  @Get('{/:userId}')\n  public getPosts(@Param('userId') userId: string) {\n    return this.postsService.findAll(userId);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Create a new post',\n    description: 'Allow user to create a new post with the given details',\n  })\n  @ApiBody({ type: CreatePostDto })\n  @ApiResponse({\n    status: 201,\n    description: 'The post has been successfully created.',\n    type: CreatePostDto,\n  })\n  public createPost(@Body() createPostDto: CreatePostDto) {\n    return this.postsService.create(createPostDto);\n  }\n\n  @Patch('{/:postId}')\n  @ApiOperation({\n    summary: 'Update a post',\n    description: 'Allow user to update a post with the given details',\n  })\n  @ApiBody({ type: UpdatePostDto })\n  @ApiResponse({\n    status: 200,\n    description: 'The post has been successfully updated.',\n    type: UpdatePostDto,\n  })\n  public updatePost(\n    @Param('postId') postId: string,\n    @Body() updatePostDto: UpdatePostDto,\n  ) {\n    console.log(postId, updatePostDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_imports\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersModule } from 'src/users/users.module';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './services';\n\n@Module({\n  providers: [PostsService],\n  controllers: [PostsController],\n  imports: [UsersModule],\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/services/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/services/posts.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPostDto: CreatePostDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/services/posts.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CreatePostDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/services/posts.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { CreatePostDto } from '../dots/create-posts.dto';\n\n@Injectable()\nexport class PostsService {\n  constructor(private readonly usersService: UsersService) {}\n  public findAll(userId: string) {\n    const user = this.usersService.findOneById(Number(userId));\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return [\n      {\n        id: '1',\n        title: 'First Post',\n        content: 'This is the first post content',\n        user,\n      },\n      {\n        id: '2',\n        title: 'Second Post',\n        content: 'This is the second post content',\n        user,\n      },\n      {\n        id: '3',\n        title: 'Third Post',\n        content: 'This is the third post content',\n        user,\n      },\n      {\n        id: '4',\n        title: 'Fourth Post',\n        content: 'This is the fourth post content',\n        user,\n      },\n      {\n        id: '5',\n        title: 'Fifth Post',\n        content: 'This is the fifth post content',\n        user,\n      },\n      {\n        id: '6',\n        title: 'Sixth Post',\n        content: 'This is the sixth post content',\n        user,\n      },\n      {\n        id: '7',\n        title: 'Seventh Post',\n        content: 'This is the seventh post content',\n        user,\n      },\n      {\n        id: '8',\n        title: 'Eighth Post',\n        content: 'This is the eighth post content',\n        user,\n      },\n      {\n        id: '9',\n        title: 'Ninth Post',\n        content: 'This is the ninth post content',\n        user,\n      },\n      {\n        id: '10',\n        title: 'Tenth Post',\n        content: 'This is the tenth post content',\n        user,\n      },\n    ];\n  }\n\n  public create(createPostDto: CreatePostDto) {\n    return createPostDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePostDto.html":{"url":"classes/UpdatePostDto.html","title":"class - UpdatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dots/patch.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the post', example: '1'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dots/patch.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { CreatePostDto } from './create-posts.dto';\n\nexport class UpdatePostDto extends PartialType(CreatePostDto) {\n  @ApiProperty({\n    description: 'The id of the post',\n    example: '1',\n  })\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dots/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface User {\n  id: number;\n  firstName: string;\n  lastName?: string;\n  email: string;\n  password: string;\n}\n\nexport { User };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUser\n                            \n                            \n                                    \n                                    Public\n                                getUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(params: GetUserParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            GetUserParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUserParamDto: GetUserParamDto, page: number, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all users', description: 'Get all users with pagination'})@ApiResponse({status: 200, description: 'The users have been successfully retrieved.'})@ApiQuery({name: 'page', type: Number, required: false, description: 'The page number will be default 1'})@ApiQuery({name: 'limit', type: Number, required: false, description: 'The limit number will be default 10'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            GetUserParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(getUserParamDto: Pick, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  DefaultValuePipe,\n  forwardRef,\n  Get,\n  Inject,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthService } from 'src/auth/providers/auth.service';\nimport { CreateUserDto } from './dots/create-user.dto';\nimport { GetUserParamDto } from './dots/get-user-param.dto';\nimport { UpdateUserDto } from './dots/update-user.dto';\nimport { UsersService } from './users.service';\nimport { User } from './users.type';\n\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(\n    @Inject(forwardRef(() => AuthService))\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n  ) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Get all users',\n    description: 'Get all users with pagination',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'The users have been successfully retrieved.',\n  })\n  @ApiQuery({\n    name: 'page',\n    type: Number,\n    required: false,\n    description: 'The page number will be default 1',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: Number,\n    required: false,\n    description: 'The limit number will be default 10',\n  })\n  public getUsers(\n    @Param() getUserParamDto: GetUserParamDto,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n  ): User[] {\n    return this.usersService.findAll(getUserParamDto, page, limit);\n  }\n\n  @Post('/create')\n  public createUser(@Body() createUserDto: CreateUserDto) {\n    const isAuth = this.authService.isAuth();\n    if (!isAuth) {\n      throw new UnauthorizedException('Unauthorized');\n    }\n    return this.usersService.createUser(createUserDto);\n  }\n\n  @Patch('/:id')\n  public updateUser(\n    @Param() getUserParamDto: Pick,\n    @Body() updateUserDto: UpdateUserDto,\n  ) {\n    return this.usersService.updateUser(getUserParamDto.id, updateUserDto);\n  }\n\n  @Get('/:id')\n  public getUser(@Param() params: GetUserParamDto): User | null {\n    return this.usersService.findOneById(params?.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  providers: [UsersService],\n  controllers: [UsersController],\n  exports: [UsersService],\n  imports: [forwardRef(() => AuthModule)],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createUser\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOneByEmail\n                            \n                            \n                                    Public\n                                findOneById\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(user: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUserParamDto: GetUserParamDto, page: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            GetUserParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: number, user: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { GetUserParamDto } from './dots/get-user-param.dto';\nimport { UpdateUserDto } from './dots/update-user.dto';\nimport { User } from './users.type';\n\nconst users: User[] = [\n  {\n    id: 1,\n    firstName: 'John',\n    lastName: 'Doe',\n    email: 'john.doe@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 2,\n    firstName: 'Jane',\n    lastName: 'Smith',\n    email: 'jane.smith@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 3,\n    firstName: 'Michael',\n    lastName: 'Johnson',\n    email: 'michael.johnson@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 4,\n    firstName: 'Emily',\n    lastName: 'Davis',\n    email: 'emily.davis@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 5,\n    firstName: 'Robert',\n    lastName: 'Wilson',\n    email: 'robert.wilson@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 6,\n    firstName: 'Sarah',\n    lastName: 'Brown',\n    email: 'sarah.brown@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 7,\n    firstName: 'David',\n    lastName: 'Miller',\n    email: 'david.miller@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 8,\n    firstName: 'Jennifer',\n    lastName: 'Taylor',\n    email: 'jennifer.taylor@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 9,\n    firstName: 'James',\n    lastName: 'Anderson',\n    email: 'james.anderson@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 10,\n    firstName: 'Lisa',\n    lastName: 'Thomas',\n    email: 'lisa.thomas@example.com',\n    password: 'Password123!',\n  },\n];\n\n@Injectable()\nexport class UsersService {\n  public findAll(\n    getUserParamDto: GetUserParamDto,\n    page: number,\n    limit: number,\n  ): User[] {\n    console.log('@findAll with params', getUserParamDto, page, limit);\n    return users;\n  }\n\n  public createUser(user: Omit): User {\n    const newUser = {\n      id: users.length + 1,\n      ...user,\n    };\n    users.push(newUser);\n    return newUser;\n  }\n\n  public findOneById(id: number): User | null {\n    const user = users.find((user) => user.id === id);\n    if (!user) {\n      return null;\n    }\n    return user;\n  }\n\n  public updateUser(id: number, user: UpdateUserDto): User | null {\n    const index = users.findIndex((user) => user.id === id);\n    if (index === -1) {\n      return null;\n    }\n    users[index] = {\n      ...users[index],\n      ...user,\n    };\n    return users[index];\n  }\n\n  public findOneByEmail(email: string): User | null {\n    const user = users.find((user) => user.email === email);\n    if (!user) {\n      return null;\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dots/create-posts-meta-options.dto.ts\n            \n            class\n            CreatePostsMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dots/create-posts.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dots/patch.dto.ts\n            \n            class\n            UpdatePostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/services/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dots/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dots/get-user-param.dto.ts\n            \n            class\n            GetUserParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dots/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.type.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : 1.1.23\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : 7.3.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PostStatus   (src/.../posts.enum.ts)\n                        \n                        \n                            PostType   (src/.../posts.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/types/posts.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostStatus\n                    \n                \n                        \n                            \n                                 draft\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 published\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n                        \n                            \n                                 scheduled\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 review\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PostType\n                    \n                \n                        \n                            \n                                 PostStatus\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 page\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 series\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n                        \n                            \n                                 story\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNestJS Learning Project\nThis repository contains a learning project following the \"NestJS Masterclass - NodeJS Framework Backend Development\" course on Udemy.\n\n  \n\n\nProject Description\nThis project is a hands-on implementation of concepts taught in the NestJS Masterclass course. NestJS is a progressive Node.js framework for building efficient, reliable, and scalable server-side applications.\nPrerequisites\n\nNode.js (v18.x or higher recommended)\nnpm or yarn\n\nInstallation\nExample :# Clone the repository\ngit clone \ncd nestjs-intro\n\n# Install dependencies\nnpm install\n# or with yarn\nyarn installRunning the Application\nExample :# Development mode\nnpm run start\n# or\nyarn start\n\n# Watch mode (recommended for development)\nnpm run start:dev\n# or\nyarn start:dev\n\n# Production mode\nnpm run start:prod\n# or\nyarn start:prodTesting\nExample :# Unit tests\nnpm run test\n# or\nyarn test\n\n# E2E tests\nnpm run test:e2e\n# or\nyarn test:e2e\n\n# Test coverage\nnpm run test:cov\n# or\nyarn test:covProject Structure\nThe project follows the standard NestJS architecture:\n\nsrc/ - Contains the source code\nmain.ts - The entry point of the application\napp.module.ts - The root module of the application\nOther modules, controllers, and services\n\n\n\nFeatures\nThis project demonstrates various NestJS features including:\n\nDependency Injection\nModule architecture\nControllers and Routing\nServices\nMiddleware\nValidation\nError handling\nAnd more...\n\nLearning Resources\n\nNestJS Documentation\nNestJS Masterclass on Udemy\n\nLicense\nContributing\nContributions are welcome! Here's how you can contribute to this project:\n\nFork the repository\nExample :git clone https://github.com/yourusername/project-name.git\ncd project-name\nInstall dependencies\nExample :npm install\n# or\nyarn install\nCreate a branch for your feature\nExample :git checkout -b feature/your-feature-name\nMake your changes\n\nFollow the existing code style\nAdd tests for new functionality\nEnsure all tests pass with npm run test\n\n\nCommit your changes\nExample :git commit -m \"feat: add your feature description\"\nPush to your branch\nExample :git push origin feature/your-feature-name\nCreate a Pull Request\n\nGo to the original repository\nClick on \"New Pull Request\"\nSelect your branch and provide a description of your changes\n\n\n\nDevelopment\nPrerequisites\n\nNode.js (v14 or later)\nnpm or yarn\n\nSetting Up Development Environment\n\nClone the repository\nExample :git clone https://github.com/yourusername/project-name.git\ncd project-name\nInstall dependencies\nExample :npm install\n# or\nyarn install\nStart the development server\nExample :npm run start:dev\n# or\nyarn start:dev\nThe API will be available at http://localhost:3000\n\n\nAPI Documentation\nOnce the server is running, you can access the API documentation at http://localhost:3000/api (if Swagger is configured).\nThis project is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : A practice application for learning NestJS framework\n        \n            License : UNLICENSED\n        \n            Author : maitrongnhan99\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            users   (src/.../users.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 1,\n    firstName: 'John',\n    lastName: 'Doe',\n    email: 'john.doe@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 2,\n    firstName: 'Jane',\n    lastName: 'Smith',\n    email: 'jane.smith@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 3,\n    firstName: 'Michael',\n    lastName: 'Johnson',\n    email: 'michael.johnson@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 4,\n    firstName: 'Emily',\n    lastName: 'Davis',\n    email: 'emily.davis@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 5,\n    firstName: 'Robert',\n    lastName: 'Wilson',\n    email: 'robert.wilson@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 6,\n    firstName: 'Sarah',\n    lastName: 'Brown',\n    email: 'sarah.brown@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 7,\n    firstName: 'David',\n    lastName: 'Miller',\n    email: 'david.miller@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 8,\n    firstName: 'Jennifer',\n    lastName: 'Taylor',\n    email: 'jennifer.taylor@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 9,\n    firstName: 'James',\n    lastName: 'Anderson',\n    email: 'james.anderson@example.com',\n    password: 'Password123!',\n  },\n  {\n    id: 10,\n    firstName: 'Lisa',\n    lastName: 'Thomas',\n    email: 'lisa.thomas@example.com',\n    password: 'Password123!',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
